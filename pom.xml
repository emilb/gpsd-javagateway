<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>se.aftonbladet.webbtv</groupId>
	<artifactId>gpsd-javagateway</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>gpsd-javagateway</name>
	<url>http://aftonbladet.se/webbtv</url>

	<issueManagement>
		<system>Jira</system>
		<url>http://jira.aftonbladet.se</url>
	</issueManagement>

	<ciManagement>
		<system>Bamboo</system>
		<url>http://jackson:8090/bamboo</url>
	</ciManagement>

	<organization>
		<name>Aftonbladet</name>
		<url>http://www.aftonbladet.se</url>
	</organization>

<!-- 
	BUILD AND RELEASE
	
	> mvn -Pproduction clean compile war:war
	
	copy target/gpsd-javagateway.war to your container.
 -->

	<build>
		<finalName>gpsd-javagateway</finalName>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

		</plugins>

		<filters>
			<filter>src/main/filters/filter-${env}.properties</filter>
		</filters>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

	</build>

	<properties>
		<project.build.sourceEncoding>iso-8859-1</project.build.sourceEncoding>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
		<slf4j.version>1.6.1</slf4j.version>
		<h2.version>1.3.152</h2.version>
		<mysql.version>5.1.15</mysql.version>
	
		<!-- default env setting -->
		<env>dev</env>

		<targetJdk>1.6</targetJdk>
	</properties>

	<dependencies>
		<!--
			Core utilities used by other modules. Define this if you use Spring
			Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--
			Expression Language (depends on spring-core) Define this if you use
			Spring Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			Bean Factory and JavaBeans utilities (depends on spring-core) Define
			this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			Aspect Oriented Programming (AOP) Framework (depends on spring-core,
			spring-beans) Define this if you use Spring AOP APIs
			(org.springframework.aop.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			Application Context (depends on spring-core, spring-expression,
			spring-aop, spring-beans) This is the central artifact for Spring's
			Dependency Injection Container and is generally always defined
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--
			Various Application Context utilities, including EhCache, JavaMail,
			Quartz, and Freemarker integration Define this if you need any of
			these integrations
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			Transaction Management Abstraction (depends on spring-core,
			spring-beans, spring-aop, spring-context) Define this if you use
			Spring Transactions or DAO Exception Hierarchy
			(org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			JDBC Data Access Library (depends on spring-core, spring-beans,
			spring-context, spring-tx) Define this if you use Spring's
			JdbcTemplate API (org.springframework.jdbc.*) 
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version> 
		</dependency>

		<!--
			Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and
			iBatis. (depends on spring-core, spring-beans, spring-context,
			spring-tx) Define this if you need ORM (org.springframework.orm.*)
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		-->

		<!--
			Object-to-XML Mapping (OXM) abstraction and integration with JAXB,
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core,
			spring-beans, spring-context) Define this if you need OXM
			(org.springframework.oxm.*) <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version> </dependency>
		-->

		<!--
			Web application development utilities applicable to both Servlet and
			Portlet Environments (depends on spring-core, spring-beans,
			spring-context) Define this if you use Spring MVC, or wish to use
			Struts, JSF, or another web framework with Spring
			(org.springframework.web.*) 
		-->	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version> 
		</dependency>
		

		<!--
			Spring MVC for Servlet Environments (depends on spring-core,
			spring-beans, spring-context, spring-web) Define this if you use
			Spring MVC with a Servlet Container such as Apache Tomcat
			(org.springframework.web.servlet.*) <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version> </dependency>
		-->

		<!--
			Spring MVC for Portlet Environments (depends on spring-core,
			spring-beans, spring-context, spring-web) Define this if you use
			Spring MVC with a Portlet Container
			(org.springframework.web.portlet.*) <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${org.springframework.version}</version> </dependency>
		-->

		<!--
			Support for testing Spring applications with tools such as JUnit and
			TestNG This artifact is generally always defined with a 'test' scope
			for the integration testing framework and unit testing stubs
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.10</version>
		</dependency>

		<!-- Jackson, json -->
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-core-lgpl</artifactId>
		    <version>1.7.3</version>
		</dependency>

		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-lgpl</artifactId>
		    <version>1.7.3</version>
		</dependency>

	   	
	   	<dependency>
		    <groupId>javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.12.1.GA</version>
		</dependency>

		<!-- Utils from commons -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>


		<!-- Logging (SLF4J and Logback) -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.28</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>1.5</version>
			<exclusions>
				<exclusion>
		          <groupId>org.springframework</groupId>
		          <artifactId>spring</artifactId>
		        </exclusion>
		        <exclusion>
		          <groupId>org.springframework</groupId>
		          <artifactId>spring-core</artifactId>
		        </exclusion>
		        <exclusion>
		          <groupId>org.springframework</groupId>
		          <artifactId>spring-beans</artifactId>
		        </exclusion>
		        <exclusion>
		          <groupId>org.springframework</groupId>
		          <artifactId>spring-context</artifactId>
		        </exclusion>
		        <exclusion>
		          <groupId>org.springframework</groupId>
		          <artifactId>spring-web</artifactId>
		        </exclusion>
		        <exclusion>
		          <groupId>org.springframework</groupId>
		          <artifactId>spring-aop</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
	</dependencies>

	<profiles>

		<profile>
			<id>local_dev</id>
			<activation>
				<property>
					<name>!environment.type</name>
				</property>
			</activation>

			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
			</dependencies>

			<properties>
				<env>dev</env>
			</properties>
		</profile>

		<profile>
			<id>ci_build</id>
			<activation>
				<property>
					<name>environment.type</name>
					<value>ci</value>
				</property>
			</activation>

			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>${mysql.version}</version>
				</dependency>
			</dependencies>

			<properties>
				<env>test</env>
			</properties>
		</profile>

		<profile>
			<id>production</id>
			<activation>
				<property>
					<name>environment.type</name>
					<value>production</value>
				</property>
			</activation>

			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>${mysql.version}</version>
				</dependency>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>

			<properties>
				<env>prod</env>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
		  <id>morphia-repository</id>
		  <name>Morphia Repository</name>
		  <url>http://morphia.googlecode.com/svn/mavenrepo//</url>
		  <snapshots>
		    <enabled>true</enabled>
		  </snapshots>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>java.net</id>
			<name>java.net</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
	</repositories>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.0</version> <!-- 2.1.1 won't work -->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.1</version> <!-- 2.2 won't work -->
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
					<dependencyLocationEnabled>false</dependencyLocationEnabled>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
				</configuration>
			</plugin>

			<!-- JXR - Source code as HTML -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
			</plugin>

			<!-- JavaDoc - API-documentation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<!-- Surefire - JUnit testing-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.5</version>
			</plugin>

			<!-- JDepend - Package dependencies -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0-beta-2</version>
			</plugin>


			<!-- FindBugs - Finds potential bugs in your source code -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>

			<!-- JavaNCSS - Source code metrics -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>

			<!-- TagList - Creates a list with TODO:s etc -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>

			<!-- Clover - Code Coverage -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clover-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<generateXml>true</generateXml>
				</configuration>
			</plugin>

			<!-- CheckStyle - Enforces coding style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<enableRulesSummary>false</enableRulesSummary>

					<!-- Required to properly link JXR -->
					<!--					<xrefLocation>-->
					<!--						${project.reporting.outputDirectory}/../xref-->
					<!--                    </xrefLocation>-->
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
				</configuration>
			</plugin>

			<!--
				The dashboard plugin should be specified as the last report.
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dashboard-maven-plugin</artifactId>
				<version>1.0.0-beta-1</version>
			</plugin>
		</plugins>
	</reporting>

</project>
